// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// */

// import React, { useRef } from 'react'
// import { useGLTF, useAnimations } from '@react-three/drei'
// import babyScene from '../components/baby.glb'

// const Baby = (props) => {
//   const group = useRef()
//   const { nodes, materials, animations } = useGLTF(babyScene)
//   const { actions } = useAnimations(animations, group)
//   return (
//     <group ref={group} {...props} dispose={null}>
//       <group name="Scene">
//         <group name="baby4" position={[0, 0.255, 0.013]} scale={0.1}>
//           <skinnedMesh
//             name="baby4-base"
//             geometry={nodes['baby4-base'].geometry}
//             material={materials.young_asian_female}
//             skeleton={nodes['baby4-base'].skeleton}
//           />
//           <skinnedMesh
//             name="baby4-eyebrow001"
//             geometry={nodes['baby4-eyebrow001'].geometry}
//             material={materials.eyebrow001}
//             skeleton={nodes['baby4-eyebrow001'].skeleton}
//           />
//           <skinnedMesh
//             name="baby4-eyelashes01"
//             geometry={nodes['baby4-eyelashes01'].geometry}
//             material={materials.bodyMaterial}
//             skeleton={nodes['baby4-eyelashes01'].skeleton}
//           />
//           <skinnedMesh
//             name="baby4-highpolyeyes"
//             geometry={nodes['baby4-highpolyeyes'].geometry}
//             material={materials.Eyeblue}
//             skeleton={nodes['baby4-highpolyeyes'].skeleton}
//           />
//           <skinnedMesh
//             name="baby4-male_worksuit01"
//             geometry={nodes['baby4-male_worksuit01'].geometry}
//             material={materials.male_worksuit01}
//             skeleton={nodes['baby4-male_worksuit01'].skeleton}
//           />
//           <skinnedMesh
//             name="baby4-tongue01"
//             geometry={nodes['baby4-tongue01'].geometry}
//             material={materials.tongue01Material}
//             skeleton={nodes['baby4-tongue01'].skeleton}
//           />
//           <primitive object={nodes.root} />
//         </group>
//       </group>
//     </group>
//   )
// }

// useGLTF.preload('/sample model.glb')
// export default Baby

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import babyScene from '../components/babyB.glb'

const Baby  = (props) => {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF(babyScene)
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="ToonBabyB">
        <group
          name="ToonBabyB_1"
          scale={[1.45, 1.45, 1.45]}
          position={[0.1, 0.35, 4]}
          rotation={[Math.PI, -3, Math.PI]}>
          <group name="HEAD" position={[0, 0, 0.013]}>
            <skinnedMesh
              name="HEAD_1"
              geometry={nodes.HEAD_1.geometry}
              material={materials.ToonBabyB01}
              skeleton={nodes.HEAD_1.skeleton}
              morphTargetDictionary={nodes.HEAD_1.morphTargetDictionary}
              morphTargetInfluences={nodes.HEAD_1.morphTargetInfluences}
            />
            <skinnedMesh
              name="HEAD_2"
              geometry={nodes.HEAD_2.geometry}
              material={materials.TBGum}
              skeleton={nodes.HEAD_2.skeleton}
              morphTargetDictionary={nodes.HEAD_2.morphTargetDictionary}
              morphTargetInfluences={nodes.HEAD_2.morphTargetInfluences}
            />
            <skinnedMesh
              name="HEAD_3"
              geometry={nodes.HEAD_3.geometry}
              material={materials.eye4}
              skeleton={nodes.HEAD_3.skeleton}
              morphTargetDictionary={nodes.HEAD_3.morphTargetDictionary}
              morphTargetInfluences={nodes.HEAD_3.morphTargetInfluences}
            />
          </group>
          <group name="ROOT">
            <group name="TB" position={[0, 0.171, 0]} rotation={[-Math.PI / 2, 0, -1.571]}>
              <primitive object={nodes.TB_Pelvis} />
            </group>
          </group>
          <skinnedMesh
            name="TB_Body"
            geometry={nodes.TB_Body.geometry}
            material={materials.ToonBabyA01}
            skeleton={nodes.TB_Body.skeleton}
            rotation={[-Math.PI / 2, 0, 0]}
          />
          <skinnedMesh
            name="TB_Diaper"
            geometry={nodes.TB_Diaper.geometry}
            material={materials.TBDiaper01}
            skeleton={nodes.TB_Diaper.skeleton}
            rotation={[-Math.PI / 2, 0, 0]}
          />
        </group>
      </group>
    </group>
  )
}

// useGLTF.preload('/ToonBabyB.glb')
export default Baby;